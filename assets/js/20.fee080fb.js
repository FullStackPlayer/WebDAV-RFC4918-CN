(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{374:function(t,e,a){"use strict";a.r(e);var r=a(41),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_12-http状态码的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-http状态码的使用"}},[t._v("#")]),t._v(" 12. HTTP状态码的使用")]),t._v(" "),a("p",[t._v("原有的HTTP代码并未被重新定义，但是在WebDAV场景中，它们的用法和要求在一定程度上也被扩展了。一般来说，任何请求都可以使用许多HTTP状态码来响应，而不仅仅是在本文档中描述的情况。还要注意，WebDAV服务器使用的是300级别的重定向响应（而早前的互操作性测试发现有客户端并未准备好如何应对这响应），服务器为响应请求而创建了新资源时，不得使用300级别的响应。")]),t._v(" "),a("h2",{attrs:{id:"_12-1-412-前提条件失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-412-前提条件失败"}},[t._v("#")]),t._v(" 12.1 412 - 前提条件失败")]),t._v(" "),a("p",[t._v("任何请求都可以包含一个在HTTP中定义了的条件化header（如If-Match，If-Modified-Since等）或在本规范中定义的“If”与“Overwrite”条件化header。如果服务器评估条件化header，并且该条件未能成立，则必须返回此错误代码。反过来说，如果客户端在请求中未包含条件化header，则服务器不得使用此状态代码。")]),t._v(" "),a("h2",{attrs:{id:"_12-2-414-请求uri太长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-414-请求uri太长"}},[t._v("#")]),t._v(" 12.2 414 - 请求URI太长")]),t._v(" "),a("p",[t._v("在HTTP/1.1中，此状态代码仅用于请求URI太长的情况，而不用于其他位置的URI超长。")])])}),[],!1,null,null,null);e.default=s.exports}}]);